{
  "hash": "99f7e34f1d5f6a18d052328d16632f6d",
  "result": {
    "markdown": "---\ntitle: \"Data Preprocessing\"\nauthor: \"Eric Jackson\"\ndate: \"2023-09-08\"\ncategories: [code, analysis,data,preprocessing]\nimage: \"image.jpg\"\ntoc: true\ntoc-depth: 2\nengine: knitr\n---\n\n\n# Background\n\nFor any machine learning model, there is a set of data that will be input into it. Generally the data will be broken into multiple sets, consisting of training data and test data. The training data will be the portion or set of data that is used to train the model, and the test data is what the trained model is run on to produce results.\n\nBefore one can use datasets, it's generally necessary to do some form of preprocessing to the raw data to ensure that the model can run efficiently and accurately. This can be as simple as removing NaN or Null values and as complex as performing statistical analysis to remove outliers and normalizing the data.\n\n-   populating missing data\n\n-   dropping unnecessary data\n\n-   splitting into training and testing\n\n-   dropping nan\n\n-   converting categorical values into numerical\n\n-   downsampling data\n\n# Data Preprocessing\n\nOne of the first steps in importing datasets is to drop any NaN or null values. These values will generally cause issues when running and machine learning model and are best to remove immediately. Luckily, there are several built in functions to perform this.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\nimport pandas as pd\n\n# import dataset \ndf=pd.read_csv('./WheelTemperature.csv')\ndf.isna().sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDate     0\nHigh    17\ndtype: int64\n```\n:::\n\n```{.python .cell-code}\ndfdrop=df.dropna()\ndfdrop.isna().sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDate    0\nHigh    0\ndtype: int64\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}